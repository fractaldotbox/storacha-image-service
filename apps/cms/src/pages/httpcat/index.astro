---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";

import { SpaceInfoCard } from "@/components/SpaceInfoCard";
import StorachaProvider from "@/components/StorachaProvider";
import { Button } from "@/components/ui/button";
import { getIpfsGatewayUrl } from "@/lib/gateway";
import {
	Card,
	CardContent,
	CardHeader,
	CardTitle,
} from "../../components/ui/card";

import { initStorachaClient, loadStorachaConfig } from "@repo/content";

// const { keyString, proofString } = loadStorachaConfig();

const runtime = Astro.locals.runtime;

const { client, space } = await initStorachaClient({
	keyString: runtime.VITE_STORACHA_KEY as string,
	proofString: runtime.VITE_STORACHA_PROOF as string,
});

const httpcats = await getCollection("httpcat");

Astro.props.space = space;
---

<Layout>
    <StorachaProvider client:load>
    <div class="container">
        <h2 class="text-2xl font-bold">
            HTTP Cat
        </h2>
        <SpaceInfoCard name={space.name} did={space.did()} />
        <div class="my-2 py-2">
            <a href="/httpcat/upload">
                <Button variant="outline">
                 Upload
                </Button>
            </a>

        </div>
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
            {httpcats.map(({data}:{data: CollectionEntry<'httpcat'>['data']}) => (
                <a href={`/httpcat/${data.id}`}>
                  <Card className="bg-white p-4 rounded shadow">
                        <CardHeader>
                            <CardTitle className="text-xl font-semibold mb-2">{data.id}</CardTitle>
                        </CardHeader>
                        <CardContent>
                            <img src={getIpfsGatewayUrl(data.imageSrc)} alt={`HTTP Cat ${data.id}`} class="w-full h-auto rounded" />
                        </CardContent>
                 </Card>
                </a>
            ))}
        </div>

    </div>
    </StorachaProvider>
</Layout>
